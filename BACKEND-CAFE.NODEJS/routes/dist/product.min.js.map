{"version":3,"sources":["product.js"],"names":["express","require","connection","Router","auth","router","checkRole","req","res","product","body","query","name","categoryId","description","price","err","results","status","json","message","get","authenticateToken","next","id","params","patch","affectedRows","user","module","exports"],"mappings":"aAAA,IAAMA,QAAQC,QAAQ,WAChBC,WAAWD,QAAQ,iBADnBD,OAAOA,QAAQG,SAGjBC,KAAKH,QAAQ,8BAFXC,UAAUD,QAACA,yBACjBI,OAAMA,KAAM,OAACL,KAAQG,kBAArBG,UAAAA,UAAA,SAAAC,EAAAC,GAKI,IAAIC,EAAQF,EAAIG,KAEhBR,WAAWS,MANNV,wFAMkB,CAACQ,EAAQG,KAAKH,EAAQI,WAAWJ,EAAQK,YAAYL,EAAQM,OAAO,SAACC,EAAIC,GALhGX,OAAAA,EAIUE,EAAAU,OAAA,KAAAC,KAAAH,GAGKR,EAAIU,OAAO,KAAKC,KAAK,CAACC,QAAQ,mCAATf,OAArBgB,IAAP,OAAAjB,KAAAkB,kBAAA,SAAAf,EAAAC,EAAAe,GAGArB,WAAOM,MADP,iKACO,SAAAQ,EAAgBG,GAC1B,OAAAH,EAKMR,EAAAU,OAAA,KAAAC,KAAAH,GAXXR,EAAAU,OAAA,KAAAC,KAAAF,OAiBQZ,OAAAgB,IAAA,qBAAuBF,KAAhBG,kBAAP,SAAAf,EAAAC,EAAAe,GACH,IAAAC,EAAAjB,EAAAkB,OAAAD,GARTtB,WAAAS,MAEI,mEAFJ,CAAAa,GAAA,SAAAR,EAAAC,GAYOI,OAAIL,EAGUL,EAAAA,OAAjB,KAA4BQ,KAAAH,GAFfS,EAAOD,OAApB,KAAAL,KAAAF,OAOKZ,OAAAgB,IAAA,eAAAjB,KAAAkB,kBAAA,SAAAf,EAAAC,EAAAe,GALL,IAAAC,EAAAjB,EAAAkB,OAAAD,GASJnB,WAAWM,MAZX,2DAY0BP,CAAAA,GAAKkB,SAAAA,EAAAA,GACnB,OAACf,EAGGC,EAAAU,OAAA,KAAAC,KAAAH,GAFFR,EAAAU,OAAA,KAAAC,KAAAF,EAAA,QAOTZ,OANDqB,MAAA,UAAAtB,KAAAkB,kBAAAhB,UAAAA,UAAA,SAAAC,EAAAC,EAAAe,GAHJ,IAAAd,EAAAF,EAAAG,KAaIR,WAAWS,MADF,0EACT,CAAAF,EAAAG,KAAAH,EAAAI,WAAAJ,EAAAK,YAAAL,EAAAM,MAAAN,EAAAe,IAAA,SAAAR,EAAAC,GACIN,OAAKK,EAIGR,EAAAU,OAAA,KAAAC,KAAAH,GAHW,GAAZL,EAAMA,aACLH,EAAAU,OAAA,KAAAC,KAAA,CAAAC,QAAA,8BAEWF,EAAAA,OAAJ,KAAAC,KAAqB,CAAAC,QAAA,qCAEJf,OAAA,OAA5B,cAAAD,KAAAkB,kBAAAhB,UAAAA,UAAA,SAAAC,EAAAC,EAAAe,GACH,IALDC,EAKKjB,EAAAkB,OAAAD,GAEJtB,WAAAS,MADUH,iCACV,CAAAgB,GAAA,SAAAR,EAAAC,GARL,OAAAD,EAgBYR,EAAAU,OAAA,KAAAC,KAAAH,GAnBhB,GAAAC,EAAAU,aAecnB,EAAAU,OAAcd,KAAKkB,KAAAA,CAAAA,QAAAA,8BAEnBd,EAAAU,OAAA,KAAAC,KAAA,CAAAC,QAAV,qCAKSf,OAAAqB,MAAA,gBAAAtB,KAAAkB,kBAAAhB,UAAAA,UAAA,SAAAC,EAAAC,EAAAe,GASV,IAAIK,EAAKrB,EAAIG,KARyBU,WAAOT,MAA7BH,yCAA8B,CAAAoB,EAAAV,OAAAU,EAAAJ,IAAA,SAAAR,EAAAC,GAArC,OAAAD,EAOCR,EAAAU,OAAgBd,KAAKkB,KAAAA,GANrB,GAAAL,EAAAU,aACMnB,EAAAU,OAAqBF,KAA5BG,KAAA,CAAAC,QAAA,8BAPRZ,EAAAU,OAAA,KAAAC,KAAA,CAAAC,QAAA,4CAiBQS,OAAAC,QAAGb","file":"product.min.js","sourcesContent":["const express=require('express');\r\nconst connection=require('../connection');\r\nconst router=express.Router();\r\nvar auth=require('../services/authentication');\r\nvar checkRole=require('../services/checkRole');\r\n\r\nrouter.post('/add',auth.authenticateToken,checkRole.checkRole,(req,res)=>{\r\n    let product=req.body;\r\n    var query=\"insert into product (name,categoryId,description,price,status) values(?,?,?,?,'true')\";\r\n    connection.query(query,[product.name,product.categoryId,product.description,product.price],(err,results)=>{\r\n        if(!err){\r\n            return res.status(200).json({message:\"Product added successfully\"});\r\n        }\r\n        else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.get('/get',auth.authenticateToken,(req,res,next)=>{\r\n    var query= \"select p.id,p.name,p.description,p.price,p.status,c.id as categoryId,c.name as categoryName from product as p INNER JOIN category as c where p.categoryId=c.id\";\r\n    connection.query(query,(err,results)=>{\r\n        if(!err){\r\n            return res.status(200).json(results);\r\n        }\r\n        else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.get('/getByCategory/:id',auth.authenticateToken,(req,res,next)=>{\r\n    const id=req.params.id;\r\n    var query=\"select id,name from product where categoryId=? and status='true'\";\r\n    connection.query(query,[id],(err,results)=>{\r\n        if(!err){\r\n            return res.status(200).json(results);\r\n        }else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.get('/getById/:id',auth.authenticateToken,(req,res,next)=>{\r\n    const id=req.params.id;\r\n    var query=\"select id,name,description,price from product where id=?\";\r\n    connection.query(query,[id],(err,results)=>{\r\n        if(!err){\r\n            return res.status(200).json(results[0]);\r\n        }else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.patch('/update',auth.authenticateToken,checkRole.checkRole,(req,res,next)=>{\r\n    let product=req.body;\r\n    var query=\"update product set name=?,categoryId=?,description=?,price=? where id=?\";\r\n    connection.query(query,[product.name,product.categoryId,product.description,product.price,product.id],(err,results)=>{\r\n        if(!err){\r\n            if(results.affectedRows == 0){\r\n                return res.status(404).json({message:\"Product id does not found\"});\r\n            }\r\n            return res.status(200).json({message:\"Product Updated Successfully\"});\r\n        }else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.delete('/delete/:id',auth.authenticateToken,checkRole.checkRole,(req,res,next)=>{\r\n    const id=req.params.id;\r\n    var query=\"delete from product where id=?\";\r\n    connection.query(query,[id],(err,results)=>{\r\n        if(!err){\r\n            if(results.affectedRows==0){\r\n                return res.status(404).json({message:\"Product id does not found\"})\r\n            }\r\n            return res.status(200).json({message:\"Product Deleted Successfully\"});\r\n        }else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.patch('/updateStatus',auth.authenticateToken,checkRole.checkRole,(req,res,next)=>{\r\n   let user=req.body;\r\n    var query=\"update product set status=? where id=?\";\r\n    connection.query(query,[user.status,user.id],(err,results)=>{\r\n        if(!err){\r\n            if(results.affectedRows==0){\r\n                return res.status(404).json({message:\"Product id does not found\"})\r\n            }\r\n            return res.status(200).json({message:\"Product Status Updated Successfully\"});\r\n        }else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nmodule.exports=router;"]}