{"version":3,"sources":["bill.js"],"names":["express","require","connection","Router","ejs","path","router","uuid","json","post","auth","authenticateToken","req","res","generateuuid","v1","orderDetails","body","productDetailsReport","JSON","parse","productDetails","query","name","email","contactNumber","paymentMethod","totalAmount","locals","err","results","status","renderFile","join","__dirname","pdf","create","toFile","data","console","log","pdfPath","contentType","fs","createReadStream","pipe","next","id","params","affectedRows","module","exports"],"mappings":"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","file":"bill.min.js","sourcesContent":["const express=require('express');\r\nconst connection=require('../connection');\r\nconst router=express.Router();\r\nlet ejs=require('ejs');\r\nlet pdf=require('html-pdf');\r\nlet path=require('path');\r\nvar fs=require('fs');\r\nvar uuid=require('uuid');\r\nvar auth=require('../services/authentication');\r\nconst { json } = require('stream/consumers');\r\n\r\nrouter.post('/generateReport',auth.authenticateToken,(req,res)=>{\r\n    const generateuuid=uuid.v1();\r\n    const orderDetails=req.body;\r\n    var productDetailsReport=JSON.parse(orderDetails.productDetails);\r\n\r\n    var query=\"insert into bill (name,uuid,email,contactNumber,paymentMethod,total,productDetails,createdBy) values(?,?,?,?,?,?,?,?)\";\r\n    connection.query(query,[orderDetails.name,generateuuid,orderDetails.email,orderDetails.contactNumber,orderDetails.paymentMethod,orderDetails.totalAmount,orderDetails.productDetails,res.locals.email],(err,results)=>{\r\n        if(!err){\r\n            ejs.renderFile(path.join(__dirname,'',\"report.ejs\"),{productDetails:productDetailsReport,name:orderDetails.name,\r\n                email:orderDetails.email,contactNumber:orderDetails.contactNumber,paymentMethod:orderDetails.paymentMethod,\r\n                totalAmount:orderDetails.totalAmount},(err,results)=>{\r\n                    if(err){\r\n                        return res.status(500).json(err);\r\n                    }else{\r\n                    pdf.create(results).toFile('./generate_pdf/'+generateuuid+\".pdf\",function(err,data){\r\n                        if(err){\r\n                            console.log(err);\r\n                            return res.status(500).json(err);\r\n                        }\r\n                        else{\r\n                            return res.status(200).json({uuid:generateuuid});\r\n                        }\r\n                    })\r\n                }\r\n                    \r\n                })\r\n        }else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n\r\n})\r\n\r\nrouter.post('/getPdf',auth.authenticateToken,function(req,res){\r\n    const orderDetails=req.body;\r\n    const pdfPath='./generate_pdf/'+orderDetails.uuid+'.pdf';\r\n    if(fs.existsSync(pdfPath)){\r\n        res.contentType(\"application/pdf\");\r\n        fs.createReadStream(pdfPath).pipe(res);\r\n    }\r\n    else{\r\n        var productDetailsReport=JSON.parse(orderDetails.productDetails);\r\n        ejs.renderFile(path.join(__dirname,'',\"report.ejs\"),{productDetails:productDetailsReport,name:orderDetails.name,email:orderDetails.email,contactNumber:orderDetails.contactNumber,paymentMethod:orderDetails.paymentMethod,totalAmount:orderDetails.totalAmount},(err,results)=>{\r\n            if(err){\r\n                return res.status(500).json(err);\r\n            }\r\n            else{\r\n                pdf.create(results).toFile('./generate_pdf/'+orderDetails.uuid+\".pdf\",function(err,results){\r\n                    if(err){\r\n                        console.log(err);\r\n                        return res.status(500).json(err);\r\n                    }\r\n                    else{\r\n                        res.contentType(\"application/pdf\");\r\n                        fs.createReadStream(pdfPath).pipe(res);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n})\r\n\r\nrouter.get('/getBills',auth.authenticateToken,(req,res,next)=>{\r\n    var query=\"select * from bill order by id DESC\";\r\n    connection.query(query,(err,results)=>{\r\n        if(!err){\r\n            return res.status(200).json(results);\r\n        }\r\n        else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.delete('/delete/:id',auth.authenticateToken,(req,res,next)=>{\r\n    const id=req.params.id;\r\n    var query=\"delete from bill where id=?\";\r\n    connection.query(query,[id],(err,results)=>{\r\n        if(!err){\r\n            if(results.affectedRows == 0){\r\n                return res.status(404).json({message:\"Bill id does not found\"});\r\n            }\r\n            return res.status(200).json({message:\"Bill Deleted Successfully\"});\r\n        }\r\n        else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\nmodule.exports=router;"]}