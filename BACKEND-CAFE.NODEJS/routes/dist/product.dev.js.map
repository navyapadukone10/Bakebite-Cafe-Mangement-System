{"version":3,"sources":["product.js"],"names":["express","require","connection","router","Router","auth","checkRole","post","authenticateToken","req","res","product","body","query","name","categoryId","description","price","err","results","status","json","message","get","next","id","params","patch","affectedRows","user","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAACC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMC,UAAU,GAACD,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAME,MAAM,GAACH,OAAO,CAACI,MAAR,EAAb;;AACA,IAAIC,IAAI,GAACJ,OAAO,CAAC,4BAAD,CAAhB;;AACA,IAAIK,SAAS,GAACL,OAAO,CAAC,uBAAD,CAArB;;AAEAE,MAAM,CAACI,IAAP,CAAY,MAAZ,EAAmBF,IAAI,CAACG,iBAAxB,EAA0CF,SAAS,CAACA,SAApD,EAA8D,UAACG,GAAD,EAAKC,GAAL,EAAW;AACrE,MAAIC,OAAO,GAACF,GAAG,CAACG,IAAhB;AACA,MAAIC,KAAK,GAAC,uFAAV;AACAX,EAAAA,UAAU,CAACW,KAAX,CAAiBA,KAAjB,EAAuB,CAACF,OAAO,CAACG,IAAT,EAAcH,OAAO,CAACI,UAAtB,EAAiCJ,OAAO,CAACK,WAAzC,EAAqDL,OAAO,CAACM,KAA7D,CAAvB,EAA2F,UAACC,GAAD,EAAKC,OAAL,EAAe;AACtG,QAAG,CAACD,GAAJ,EAAQ;AACJ,aAAOR,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAC;AAAT,OAArB,CAAP;AACH,KAFD,MAGI;AACA,aAAOZ,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB,CAAP;AACH;AACJ,GAPD;AAQH,CAXD;AAaAf,MAAM,CAACoB,GAAP,CAAW,MAAX,EAAkBlB,IAAI,CAACG,iBAAvB,EAAyC,UAACC,GAAD,EAAKC,GAAL,EAASc,IAAT,EAAgB;AACrD,MAAIX,KAAK,GAAE,gKAAX;AACAX,EAAAA,UAAU,CAACW,KAAX,CAAiBA,KAAjB,EAAuB,UAACK,GAAD,EAAKC,OAAL,EAAe;AAClC,QAAG,CAACD,GAAJ,EAAQ;AACJ,aAAOR,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,OAArB,CAAP;AACH,KAFD,MAGI;AACA,aAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB,CAAP;AACH;AACJ,GAPD;AAQH,CAVD;AAYAf,MAAM,CAACoB,GAAP,CAAW,oBAAX,EAAgClB,IAAI,CAACG,iBAArC,EAAuD,UAACC,GAAD,EAAKC,GAAL,EAASc,IAAT,EAAgB;AACnE,MAAMC,EAAE,GAAChB,GAAG,CAACiB,MAAJ,CAAWD,EAApB;AACA,MAAIZ,KAAK,GAAC,kEAAV;AACAX,EAAAA,UAAU,CAACW,KAAX,CAAiBA,KAAjB,EAAuB,CAACY,EAAD,CAAvB,EAA4B,UAACP,GAAD,EAAKC,OAAL,EAAe;AACvC,QAAG,CAACD,GAAJ,EAAQ;AACJ,aAAOR,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,OAArB,CAAP;AACH,KAFD,MAEK;AACD,aAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB,CAAP;AACH;AACJ,GAND;AAOH,CAVD;AAYAf,MAAM,CAACoB,GAAP,CAAW,cAAX,EAA0BlB,IAAI,CAACG,iBAA/B,EAAiD,UAACC,GAAD,EAAKC,GAAL,EAASc,IAAT,EAAgB;AAC7D,MAAMC,EAAE,GAAChB,GAAG,CAACiB,MAAJ,CAAWD,EAApB;AACA,MAAIZ,KAAK,GAAC,0DAAV;AACAX,EAAAA,UAAU,CAACW,KAAX,CAAiBA,KAAjB,EAAuB,CAACY,EAAD,CAAvB,EAA4B,UAACP,GAAD,EAAKC,OAAL,EAAe;AACvC,QAAG,CAACD,GAAJ,EAAQ;AACJ,aAAOR,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,OAAO,CAAC,CAAD,CAA5B,CAAP;AACH,KAFD,MAEK;AACD,aAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB,CAAP;AACH;AACJ,GAND;AAOH,CAVD;AAYAf,MAAM,CAACwB,KAAP,CAAa,SAAb,EAAuBtB,IAAI,CAACG,iBAA5B,EAA8CF,SAAS,CAACA,SAAxD,EAAkE,UAACG,GAAD,EAAKC,GAAL,EAASc,IAAT,EAAgB;AAC9E,MAAIb,OAAO,GAACF,GAAG,CAACG,IAAhB;AACA,MAAIC,KAAK,GAAC,yEAAV;AACAX,EAAAA,UAAU,CAACW,KAAX,CAAiBA,KAAjB,EAAuB,CAACF,OAAO,CAACG,IAAT,EAAcH,OAAO,CAACI,UAAtB,EAAiCJ,OAAO,CAACK,WAAzC,EAAqDL,OAAO,CAACM,KAA7D,EAAmEN,OAAO,CAACc,EAA3E,CAAvB,EAAsG,UAACP,GAAD,EAAKC,OAAL,EAAe;AACjH,QAAG,CAACD,GAAJ,EAAQ;AACJ,UAAGC,OAAO,CAACS,YAAR,IAAwB,CAA3B,EAA6B;AACzB,eAAOlB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC;AAAT,SAArB,CAAP;AACH;;AACD,aAAOZ,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAC;AAAT,OAArB,CAAP;AACH,KALD,MAKK;AACD,aAAOZ,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB,CAAP;AACH;AACJ,GATD;AAUH,CAbD;AAeAf,MAAM,UAAN,CAAc,aAAd,EAA4BE,IAAI,CAACG,iBAAjC,EAAmDF,SAAS,CAACA,SAA7D,EAAuE,UAACG,GAAD,EAAKC,GAAL,EAASc,IAAT,EAAgB;AACnF,MAAMC,EAAE,GAAChB,GAAG,CAACiB,MAAJ,CAAWD,EAApB;AACA,MAAIZ,KAAK,GAAC,gCAAV;AACAX,EAAAA,UAAU,CAACW,KAAX,CAAiBA,KAAjB,EAAuB,CAACY,EAAD,CAAvB,EAA4B,UAACP,GAAD,EAAKC,OAAL,EAAe;AACvC,QAAG,CAACD,GAAJ,EAAQ;AACJ,UAAGC,OAAO,CAACS,YAAR,IAAsB,CAAzB,EAA2B;AACvB,eAAOlB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC;AAAT,SAArB,CAAP;AACH;;AACD,aAAOZ,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAC;AAAT,OAArB,CAAP;AACH,KALD,MAKK;AACD,aAAOZ,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB,CAAP;AACH;AACJ,GATD;AAUH,CAbD;AAeAf,MAAM,CAACwB,KAAP,CAAa,eAAb,EAA6BtB,IAAI,CAACG,iBAAlC,EAAoDF,SAAS,CAACA,SAA9D,EAAwE,UAACG,GAAD,EAAKC,GAAL,EAASc,IAAT,EAAgB;AACrF,MAAIK,IAAI,GAACpB,GAAG,CAACG,IAAb;AACC,MAAIC,KAAK,GAAC,wCAAV;AACAX,EAAAA,UAAU,CAACW,KAAX,CAAiBA,KAAjB,EAAuB,CAACgB,IAAI,CAACT,MAAN,EAAaS,IAAI,CAACJ,EAAlB,CAAvB,EAA6C,UAACP,GAAD,EAAKC,OAAL,EAAe;AACxD,QAAG,CAACD,GAAJ,EAAQ;AACJ,UAAGC,OAAO,CAACS,YAAR,IAAsB,CAAzB,EAA2B;AACvB,eAAOlB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC;AAAT,SAArB,CAAP;AACH;;AACD,aAAOZ,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAC;AAAT,OAArB,CAAP;AACH,KALD,MAKK;AACD,aAAOZ,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,GAArB,CAAP;AACH;AACJ,GATD;AAUH,CAbD;AAeAY,MAAM,CAACC,OAAP,GAAe5B,MAAf","sourcesContent":["const express=require('express');\r\nconst connection=require('../connection');\r\nconst router=express.Router();\r\nvar auth=require('../services/authentication');\r\nvar checkRole=require('../services/checkRole');\r\n\r\nrouter.post('/add',auth.authenticateToken,checkRole.checkRole,(req,res)=>{\r\n    let product=req.body;\r\n    var query=\"insert into product (name,categoryId,description,price,status) values(?,?,?,?,'true')\";\r\n    connection.query(query,[product.name,product.categoryId,product.description,product.price],(err,results)=>{\r\n        if(!err){\r\n            return res.status(200).json({message:\"Product added successfully\"});\r\n        }\r\n        else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.get('/get',auth.authenticateToken,(req,res,next)=>{\r\n    var query= \"select p.id,p.name,p.description,p.price,p.status,c.id as categoryId,c.name as categoryName from product as p INNER JOIN category as c where p.categoryId=c.id\";\r\n    connection.query(query,(err,results)=>{\r\n        if(!err){\r\n            return res.status(200).json(results);\r\n        }\r\n        else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.get('/getByCategory/:id',auth.authenticateToken,(req,res,next)=>{\r\n    const id=req.params.id;\r\n    var query=\"select id,name from product where categoryId=? and status='true'\";\r\n    connection.query(query,[id],(err,results)=>{\r\n        if(!err){\r\n            return res.status(200).json(results);\r\n        }else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.get('/getById/:id',auth.authenticateToken,(req,res,next)=>{\r\n    const id=req.params.id;\r\n    var query=\"select id,name,description,price from product where id=?\";\r\n    connection.query(query,[id],(err,results)=>{\r\n        if(!err){\r\n            return res.status(200).json(results[0]);\r\n        }else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.patch('/update',auth.authenticateToken,checkRole.checkRole,(req,res,next)=>{\r\n    let product=req.body;\r\n    var query=\"update product set name=?,categoryId=?,description=?,price=? where id=?\";\r\n    connection.query(query,[product.name,product.categoryId,product.description,product.price,product.id],(err,results)=>{\r\n        if(!err){\r\n            if(results.affectedRows == 0){\r\n                return res.status(404).json({message:\"Product id does not found\"});\r\n            }\r\n            return res.status(200).json({message:\"Product Updated Successfully\"});\r\n        }else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.delete('/delete/:id',auth.authenticateToken,checkRole.checkRole,(req,res,next)=>{\r\n    const id=req.params.id;\r\n    var query=\"delete from product where id=?\";\r\n    connection.query(query,[id],(err,results)=>{\r\n        if(!err){\r\n            if(results.affectedRows==0){\r\n                return res.status(404).json({message:\"Product id does not found\"})\r\n            }\r\n            return res.status(200).json({message:\"Product Deleted Successfully\"});\r\n        }else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nrouter.patch('/updateStatus',auth.authenticateToken,checkRole.checkRole,(req,res,next)=>{\r\n   let user=req.body;\r\n    var query=\"update product set status=? where id=?\";\r\n    connection.query(query,[user.status,user.id],(err,results)=>{\r\n        if(!err){\r\n            if(results.affectedRows==0){\r\n                return res.status(404).json({message:\"Product id does not found\"})\r\n            }\r\n            return res.status(200).json({message:\"Product Status Updated Successfully\"});\r\n        }else{\r\n            return res.status(500).json(err);\r\n        }\r\n    })\r\n})\r\n\r\nmodule.exports=router;"],"file":"product.dev.js"}